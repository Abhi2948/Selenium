<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-16T19:59:08 IST" name="Loan Department" finished-at="2025-01-16T19:59:08 IST" duration-ms="177">
    <groups>
      <group name="Smoke">
        <method signature="Day2.Demo()[pri:0, instance:test.Day2@f0c8a99]" name="Demo" class="test.Day2"/>
        <method signature="Day4.MobileLoginHomeLoan()[pri:0, instance:test.Day4@740cae06]" name="MobileLoginHomeLoan" class="test.Day4"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-01-16T19:59:08 IST" name="Test" finished-at="2025-01-16T19:59:08 IST" duration-ms="89">
      <class name="test.Day1">
        <test-method signature="Demo()[pri:0, instance:test.Day1@3e27aa33]" started-at="2025-01-16T19:59:08 IST" name="Demo" finished-at="2025-01-16T19:59:08 IST" duration-ms="17" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.Day1.Demo(Day1.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:test.Day1@3e27aa33]" started-at="2025-01-16T19:59:08 IST" name="lastExecution" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- test.Day1 -->
      <class name="test.Day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test.Day2@f0c8a99]" started-at="2025-01-16T19:59:08 IST" name="prerequiste" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="Demo()[pri:0, instance:test.Day2@f0c8a99]" started-at="2025-01-16T19:59:08 IST" name="Demo" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.Day2@f0c8a99]" started-at="2025-01-16T19:59:08 IST" name="lastexecution" finished-at="2025-01-16T19:59:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.Day2 -->
      <class name="test.Day4">
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:test.Day4@740cae06]" started-at="2025-01-16T19:59:08 IST" name="LoginAPIHomeLoan" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method signature="MobileLoginHomeLoan()[pri:0, instance:test.Day4@740cae06]" started-at="2025-01-16T19:59:08 IST" name="MobileLoginHomeLoan" finished-at="2025-01-16T19:59:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLoginHomeLoan -->
        <test-method signature="WebLoginHomeloan(java.lang.String)[pri:0, instance:test.Day4@740cae06]" started-at="2025-01-16T19:59:08 IST" name="WebLoginHomeloan" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeloan -->
      </class> <!-- test.Day4 -->
    </test> <!-- Test -->
    <test started-at="2025-01-16T19:59:08 IST" name="Car loan" finished-at="2025-01-16T19:59:08 IST" duration-ms="25">
      <class name="test.Day1">
        <test-method is-config="true" signature="AfSuite()[pri:0, instance:test.Day1@3e27aa33]" started-at="2025-01-16T19:59:08 IST" name="AfSuite" finished-at="2025-01-16T19:59:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfSuite -->
      </class> <!-- test.Day1 -->
      <class name="test.Day3">
        <test-method is-config="true" signature="BfSuite()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:07 IST" name="BfSuite" finished-at="2025-01-16T19:59:08 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BfSuite -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="beforeevery" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="LoginAPIcarLoan()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="LoginAPIcarLoan" finished-at="2025-01-16T19:59:08 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIcarLoan -->
        <test-method is-config="true" signature="Afterevery()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="Afterevery" finished-at="2025-01-16T19:59:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="beforeevery" finished-at="2025-01-16T19:59:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="WebLoginCarloan(java.lang.String,java.lang.String)[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="WebLoginCarloan" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginCarloan -->
        <test-method is-config="true" signature="Afterevery()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="Afterevery" finished-at="2025-01-16T19:59:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterevery -->
        <test-method is-config="true" signature="beforeevery()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="beforeevery" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeevery -->
        <test-method signature="APIcarloan()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="APIcarloan" finished-at="2025-01-16T19:59:08 IST" depends-on-methods="test.Day3.WebLoginCarloan" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APIcarloan -->
        <test-method is-config="true" signature="Afterevery()[pri:0, instance:test.Day3@2b40ff9c]" started-at="2025-01-16T19:59:08 IST" name="Afterevery" finished-at="2025-01-16T19:59:08 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Afterevery -->
      </class> <!-- test.Day3 -->
    </test> <!-- Car loan -->
  </suite> <!-- Loan Department -->
</testng-results>
